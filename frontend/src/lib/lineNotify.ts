import axios from "axios";

export const sendLineGroupMessage = async (
    type: "‡πÄ‡∏ö‡∏¥‡∏Å" | "‡∏¢‡∏∑‡∏°",
    userName: string,
    totalItems: number,
    requestDate: string,
    usagePurpose: string
) => {
    const isBorrow = type === "‡∏¢‡∏∑‡∏°";

    const message = {
        type: "flex",
        altText: `üì¶ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£${type}‡∏û‡∏±‡∏™‡∏î‡∏∏`,
        contents: {
            type: "bubble",
            size: "mega",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: `üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£${type}`,
                        weight: "bold",
                        size: "lg",
                        color: "#FFFFFF"
                    }
                ],
                backgroundColor: isBorrow ? "#3498db" : "#2ecc71", // ‡∏ü‡πâ‡∏≤ = ‡∏¢‡∏∑‡∏° / ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß = ‡πÄ‡∏ö‡∏¥‡∏Å
                paddingAll: "lg",
                paddingTop: "md",
                paddingBottom: "md"
            },
            body: {
                type: "box",
                layout: "vertical",
                backgroundColor: "#FFFFFF",
                spacing: "md",
                contents: [
                    {
                        type: "text",
                        text: type, // "‡πÄ‡∏ö‡∏¥‡∏Å" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏¢‡∏∑‡∏°"
                        weight: "bold",
                        size: "xl",
                        color: isBorrow ? "#3498db" : "#2ecc71",
                        align: "center",
                    },
                    {
                        type: "separator",
                        margin: "md"
                    },
                    {
                        type: "box",
                        layout: "vertical",
                        spacing: "sm",
                        margin: "md",
                        contents: [
                            {
                                type: "text",
                                text: `‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏Ç‡∏≠: ${userName}`,
                                wrap: true,
                                size: "md",
                            },
                            {
                                type: "text",
                                text: `‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠: ${totalItems} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
                                wrap: true,
                                size: "md",
                            },
                            {
                                type: "text",
                                text: `‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠: ${usagePurpose}`,
                                wrap: true,
                                size: "md",
                            },
                            {
                                type: "text",
                                text: `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠: ${requestDate}`,
                                wrap: true,
                                size: "md",
                            }
                        ]
                    }
                ]
            }
        }
    };

    try {
        const response = await axios.post(
            "https://api.line.me/v2/bot/message/push",
            {
                to: process.env.LINE_GROUP_ID,
                messages: [message],
            },
            {
                headers: {
                    Authorization: `Bearer ${process.env.LINE_TOKEN}`,
                    "Content-Type": "application/json",
                },
            }
        );

        console.log("‚úÖ LINE Flex message sent");
        return response.data;
    } catch (error) {
        console.error('LINE Notify Error:', error);
    }
};
